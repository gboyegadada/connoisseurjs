// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FacetValue /> should display clickable Facet Value 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component
    data={
      Object {
        "checked": false,
        "exclude": false,
        "lookupValue": "En Succursale",
        "numberOfResults": 1,
        "score": 1,
        "value": "En Succursale",
        "valueType": "Standard",
      }
    }
    field="tpdisponibilite"
    fkey="tpdisponibilite"
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
    location={
      Object {
        "hash": "",
        "pathname": "/",
        "search": "",
        "state": undefined,
      }
    }
    match={
      Object {
        "isExact": false,
        "params": Object {},
        "path": "",
        "url": "",
      }
    }
  >
    <ConnectAdvanced(reduxRenderPropRender)>
      <reduxRenderPropRender
        mappedActions={
          Object {
            "exclude": [Function],
            "include": [Function],
            "tick": [Function],
            "untick": [Function],
          }
        }
        mappedState={
          Object {
            "aqUrlEncoded": undefined,
            "queryParams": Object {
              "aq": undefined,
              "firstResult": undefined,
              "language": undefined,
              "numberOfResults": undefined,
              "q": undefined,
              "sortCriteria": undefined,
              "sortField": undefined,
            },
          }
        }
        render={[Function]}
      >
        <li
          className="facet-value"
          data-count={1}
          data-value="En Succursale"
          key="tpdisponibilite"
        >
          <MdCheckBoxOutlineBlank
            onClick={[Function]}
            size={21}
          >
            <IconBase
              attr={
                Object {
                  "viewBox": "0 0 24 24",
                }
              }
              onClick={[Function]}
              size={21}
            >
              <svg
                fill="currentColor"
                height={21}
                onClick={[Function]}
                size={21}
                stroke="currentColor"
                strokeWidth="0"
                style={
                  Object {
                    "color": undefined,
                  }
                }
                viewBox="0 0 24 24"
                width={21}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                  key="0"
                />
              </svg>
            </IconBase>
          </MdCheckBoxOutlineBlank>
          <span
            className="facet-value-label "
            onClick={[Function]}
          >
            En Succursale
          </span>
           
          <span
            className="facet-value-count"
          >
            1
          </span>
          <MdNotInterested
            className="facet-value-exclude "
            onClick={[Function]}
            size={12}
          >
            <IconBase
              attr={
                Object {
                  "viewBox": "0 0 24 24",
                }
              }
              className="facet-value-exclude "
              onClick={[Function]}
              size={12}
            >
              <svg
                className="facet-value-exclude "
                fill="currentColor"
                height={12}
                onClick={[Function]}
                size={12}
                stroke="currentColor"
                strokeWidth="0"
                style={
                  Object {
                    "color": undefined,
                  }
                }
                viewBox="0 0 24 24"
                width={12}
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z"
                  key="0"
                />
              </svg>
            </IconBase>
          </MdNotInterested>
        </li>
      </reduxRenderPropRender>
    </ConnectAdvanced(reduxRenderPropRender)>
  </Component>
</Provider>
`;
